{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til_191106/","webpackCompilationHash":"9cb267507f964e427af7","result":{"data":{"markdownRemark":{"id":"d04a212f-8c70-5329-bbf6-5794f5625407","html":"<h2 id=\"social-login\"><a href=\"#social-login\" aria-label=\"social login permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Social Login</strong></h2>\n<p>예를 들어, 카카오 소셜 로그인을 사용하면 카카오에서 제공하는 유저 정보만을 이용해 유저 데이터를 구성하는 것이다.</p>\n<ol>\n<li>카카오로 로그인 클릭(request)</li>\n<li>카카오에서 만든 토큰을 제공(response)</li>\n<li>받은 토큰을 그대로 백앤드 서버로 전송(request)</li>\n<li>백앤드 서버에서 카카오 (유저확인)api를 호출(request)</li>\n<li>토큰을 받은 카카오 서버가 유저 정보를 제공한다(비밀번호 제외)(response)</li>\n<li>\n<p>아이디와 기타 유저 정보(id, phone number, etc)를 받은 후 그 정보를 기반으로 데이터 베이스에 존재 유무를 확인한다(buisiness logic)</p>\n<ul>\n<li>없을 시: 회원가입(새로운 열을 생성)</li>\n<li>있을 시: 로그인(토큰을 만들어 프론트 서버에 전송)(response)</li>\n</ul>\n</li>\n<li>로그인을 했다면 백앤드 서버에서 받은 토큰을 받아 저장한다.(response)</li>\n</ol>\n<h3 id=\"email-인증\"><a href=\"#email-%EC%9D%B8%EC%A6%9D\" aria-label=\"email 인증 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>email 인증</strong></h3>\n<ol>\n<li>이메일 보내는 라이브러리를 사용해서 회원가입 때 받은 이메일을 활용해 이메일을 보낸다.(무슨 이메일?=> 2,3번)</li>\n<li>인증할 때 필요한 html을 프론트가 만들어서 백앤드에 전송한다.</li>\n<li>백앤드에서 그 html을 담아서 이메일을 보낸다.\nex) <a href=\"aasldfaj/token=a;sldkfj\"> 쿼리 스트링으로 전송.</li>\n<li>프론트 앤드에서 쿼리 스트링을 확인해서 이메일을 인증하는 앤드 포인트를 호출, 가입한 사람이라면 유저를 활성화 시킨다.</li>\n</ol>\n<h3 id=\"페이지네이션\"><a href=\"#%ED%8E%98%EC%9D%B4%EC%A7%80%EB%84%A4%EC%9D%B4%EC%85%98\" aria-label=\"페이지네이션 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>페이지네이션</strong></h3>\n<p>스크롤 내리면 추가적으로 로딩이 되는 효과</p>\n<ol>\n<li>최초의 get 요청을 통해 1 ~ 10을 받는다.</li>\n<li>일정 조건을 만족하면 다시 get 요청을 보낸다 쿼리 스트링에 담아서 전송(offset = 11)(state로 현재 몇개를 받았는지 관리하고 있어야 한다)</li>\n<li>11 ~ 20을 받는다.</li>\n</ol>\n<h3 id=\"iampay-이용해서-결제-api-호출하기\"><a href=\"#iampay-%EC%9D%B4%EC%9A%A9%ED%95%B4%EC%84%9C-%EA%B2%B0%EC%A0%9C-api-%ED%98%B8%EC%B6%9C%ED%95%98%EA%B8%B0\" aria-label=\"iampay 이용해서 결제 api 호출하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>iampay 이용해서 결제 api 호출하기</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">pay</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">,</span> tel <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token constant\">IMP</span><span class=\"token punctuation\">.</span><span class=\"token function\">request_pay</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"이벤트 회비\"</span><span class=\"token punctuation\">,</span>\n        merchant_uid<span class=\"token punctuation\">:</span> <span class=\"token string\">\"merchant_\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        amount<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">,</span>\n        buyer_email<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span>\n        buyer_tel<span class=\"token punctuation\">:</span> tel\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rsp</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>rsp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rsp<span class=\"token punctuation\">.</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"결제가 완료되었습니다.\"</span><span class=\"token punctuation\">;</span>\n          msg <span class=\"token operator\">+=</span> <span class=\"token string\">\"고유ID : \"</span> <span class=\"token operator\">+</span> rsp<span class=\"token punctuation\">.</span>imp_uid<span class=\"token punctuation\">;</span>\n          msg <span class=\"token operator\">+=</span> <span class=\"token string\">\"상점 거래ID : \"</span> <span class=\"token operator\">+</span> rsp<span class=\"token punctuation\">.</span>merchant_uid<span class=\"token punctuation\">;</span>\n          msg <span class=\"token operator\">+=</span> <span class=\"token string\">\"결제 금액 : \"</span> <span class=\"token operator\">+</span> rsp<span class=\"token punctuation\">.</span>paid_amount<span class=\"token punctuation\">;</span>\n          msg <span class=\"token operator\">+=</span> <span class=\"token string\">\"카드 승인번호 : \"</span> <span class=\"token operator\">+</span> rsp<span class=\"token punctuation\">.</span>apply_num<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"결제에 실패하였습니다.\"</span><span class=\"token punctuation\">;</span>\n          msg <span class=\"token operator\">+=</span> <span class=\"token string\">\"에러내용 : \"</span> <span class=\"token operator\">+</span> rsp<span class=\"token punctuation\">.</span>error_msg<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> wrongInfo <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> wrongInfo<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>먼저 IMP.init이라는 메서드를 호출해야 한다. 전역에 단 한번만 호출되면 되기 때문에 따로 빼서 호출해주었다.</li>\n<li>pay라는 메서드를 만들어서 request_pay라는 메서드를 호출한다.</li>\n<li>해당 메서드 안에는 첫번째 인자로 객체가 들어가는데 필수적으로 어떤 키 값이 들어가야 하는지는 공식 문서를 확인하면 알 수 있다.</li>\n<li>두번째 인자로 콜백 함수를 넣을 수 있다.</li>\n<li>해당 함수에서는 응답을 통해 결제 진행 여부, 에러를 파악할 수 있다.</li>\n</ol>\n<h3 id=\"datetime으로-계산하기\"><a href=\"#datetime%EC%9C%BC%EB%A1%9C-%EA%B3%84%EC%82%B0%ED%95%98%EA%B8%B0\" aria-label=\"datetime으로 계산하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>datetime으로 계산하기</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">handleEndDate</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">select</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> startDate<span class=\"token punctuation\">,</span> endDate <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> hour <span class=\"token operator\">=</span> startDate<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> duration <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>select<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hour <span class=\"token operator\">+=</span> duration<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> newDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>endDate<span class=\"token punctuation\">.</span><span class=\"token function\">setHours</span><span class=\"token punctuation\">(</span>hour<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> endDate<span class=\"token punctuation\">:</span> newDate<span class=\"token punctuation\">,</span> select<span class=\"token punctuation\">:</span> select <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>지정되어 있는 datetime을 dropdown에서 선택한 시간만큼을 더해주는, 즉 시간을 계산하는 함수를 만들어보았다.</p>\n<ol>\n<li>먼저 기존에 갖고 있는 데이터의 시간(hour)만 따로 구한다.</li>\n<li>dropdown에서 선택한 지속 시간을 숫자로 변환한다.</li>\n<li>기존 시간(hour)에 지속 시간을 더해준다.</li>\n<li>setHours()를 사용해서 바꾼 시간으로 설정한다.</li>\n</ol>","fields":{"slug":"/posts/til_191106/","tagSlugs":["/tag/project/","/tag/social-login/"]},"frontmatter":{"date":"2019.11.06","description":"Things I've learned through project","tags":["Project","Social Login"],"title":"TIL_191106","socialImage":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til_191106/"}}}