{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/westagram_react_native02/","webpackCompilationHash":"4c88981f7706072c8878","result":{"data":{"markdownRemark":{"id":"a6b8368e-21f2-5e7e-9d89-b9a212aeb9d8","html":"<p>모바일 앱은 대부분 여러 개의 스크린으로 이루어져 있다. 다수의 스크린을 다룰 때는 navigator를 사용하면 된다. 네비게이터를 만들기 위해서는 다양한 Navigation component를 사용할 수 있지만, navigation을 처음 사용하는 입장에서는 React Navigation을 사용하는 것이 좋다. React Navigation은 iOS와 Android에서 모두 사용가능하며 stack navigation과 tabbed navigation을 제공한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npm install <span class=\"token operator\">--</span>save react<span class=\"token operator\">-</span>navigation\nnpm install <span class=\"token operator\">--</span>save react<span class=\"token operator\">-</span>native<span class=\"token operator\">-</span>gesture<span class=\"token operator\">-</span>handler\nnpm install <span class=\"token operator\">--</span>save react<span class=\"token operator\">-</span>navigation<span class=\"token operator\">-</span>stack</code></pre></div>\n<p>위 명령어로 react navigation을 설치할 수 있다. 하지만 expo tab으로 작업할 경우, 자동적으로 설치가 된다.</p>\n<p>createStackNavigator는 stack이 되는 component를 return한다.\ncreateAppcontainer는 stack인 component를 인자로 받는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> AppNavigator <span class=\"token operator\">=</span> <span class=\"token function\">createStackNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Home<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    screen<span class=\"token punctuation\">:</span> HomeScreen\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같은 방식으로 작성하면 되는데 주의할 점은</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createAppContainer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-navigation\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStackNavigator <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-navigation-stack\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> Main <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Main\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> MainNavigator <span class=\"token operator\">=</span> <span class=\"token function\">createStackNavigator</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    Home<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> Main <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    Sample<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> Sample <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    initialRouteName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Home\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Index <span class=\"token operator\">=</span> <span class=\"token function\">createAppContainer</span><span class=\"token punctuation\">(</span>MainNavigator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Index<span class=\"token punctuation\">;</span></code></pre></div>\n<p>반드시 위와 같은 방식으로 import를 해줘야 한다는 것이다.<br>\n<code class=\"language-text\">Home: { screen: Main },</code> 에서 Home은 stack의 이름이라고 생각하면 된다. 저 이름을 사용해서 stack을 이동할 수 있다.<br>\n밑에 screen을 추가할 수 있다. screen으로 넘어가려면 아래와 같이 작성하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// Sample.js</span>\n<span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> alignItems<span class=\"token punctuation\">:</span> <span class=\"token string\">\"center\"</span><span class=\"token punctuation\">,</span> justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">\"center\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Button\n    onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>navigation<span class=\"token punctuation\">.</span><span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Home\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Home\"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span></code></pre></div>\n<p>위와 같이 <code class=\"language-text\">this.props.navigation.navigate(name)</code>를 쓰면 해당 name이 있는 screen의 stack이 덮어 쓰게 된다. 자동으로 뒤로 가기 버튼이 생성되고 아이폰의 경우 화면의 끝을 슬라이드하면 뒤로 갈 수 있다.<br>\n이제 여러 screen을 Appcontainer에 적용시켰다면 실제로 이동하도록 만들어주면 된다. 어떠한 button을 눌렀을 때 이동하게 하려면 아래처럼 하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">goToSample</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> navigate <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>navigation<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">navigate</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sample\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> userInfo <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> userImage<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">,</span> userName <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> styles<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> goToSample <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>TouchableOpacity onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>goToSample<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Image source<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>userInfo<span class=\"token punctuation\">.</span>img<span class=\"token punctuation\">}</span> style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>userImage<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>userName<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>userInfo<span class=\"token punctuation\">.</span>userId<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TouchableOpacity<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 가장 중요한 것은 <code class=\"language-text\">this.props.navigation.navigate</code>이다.<br>\n만약 이 코드만 작성할 경우, <code class=\"language-text\">this.props.navigation</code>이 undefined로 나오게 된다.</p>\n<p>React에서 Router를 할 때도 잘 생각해보면 넘어가고자하는 Route를 설정하는 component에는 반드시 withRouter를 import하고 HOC해주어야 했다.</p>\n<p>React Native에서는 그 작업이 없는 대신 screen을 지정해 놓은 component에서 <code class=\"language-text\">navigation={this.props.navigation}</code>을 해당 component까지 이어주어야 한다.</p>\n<p>다시 말해, screen component에서 해당 component까지의 사이에 있는 모든 부모 comonent에 <code class=\"language-text\">navigation={this.props.navigation}</code>를 작성해주어야 한다.</p>\n<p>expo tab으로 어플리케이션을 시작하게 되면, Navigation에 대한 구조가 비교적 잘 나와 있다. 먼저 Navigation 폴더에는 navigation 구조를 담은 파일을 담아야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> MainStack <span class=\"token operator\">=</span> <span class=\"token function\">createStackNavigator</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    Main<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> Main <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    Profile<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> Profile <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    initialRouteName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Main\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nMainStack<span class=\"token punctuation\">.</span>navigationOptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  tabBarLabel<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Main\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nMainStack<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ProfileStack <span class=\"token operator\">=</span> <span class=\"token function\">createStackNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Profile<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> screen<span class=\"token punctuation\">:</span> Profile <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> tabNavigator <span class=\"token operator\">=</span> <span class=\"token function\">createBottomTabNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  MainStack<span class=\"token punctuation\">,</span>\n  ProfileStack\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntabNavigator<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> tabNavigator<span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와 같이 각각의 screen을 stack으로 만들고, 어떤 구조로 stack을 쌓을 것인지를 설정해준다. 그리고 <code class=\"language-text\">createBottomTabNavigator()</code>를 사용하면 화면의 하단에 위치할 navigation을 만들 수 있다. 위의 경우에는 메인 페이지와 프로필 페이지로 이동할 수 있는 네비게이터를 만들었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">createAppContainer</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">createSwitchNavigator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    Main<span class=\"token punctuation\">:</span> MainTabNavigator\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">createAppContainer()</code>를 사용하면 여러개의 stack을 담은 App을 만들 수 있다. 그리고 <code class=\"language-text\">createSwitchNavigator()</code>를 사용하면 말 그대로 switch하면서 이동할 수 있는 navigator를 만들 수 있다.</p>","fields":{"slug":"/posts/westagram_react_native02/","tagSlugs":["/tag/react-native/"]},"frontmatter":{"date":"2019.10.24","description":"React Native Navigation","tags":["React Native"],"title":"Westagram React Native Navigation","socialImage":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/westagram_react_native02/"}}}