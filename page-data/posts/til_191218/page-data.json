{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til_191218/","webpackCompilationHash":"d0242dd32f791f74bc90","result":{"data":{"markdownRemark":{"id":"f418ea57-1035-5b74-947b-1ba7a7b13493","html":"<h4 id=\"개요\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h4>\n<p>지난 포스트에서 사용했었던 csv 파일 업로등 방법을 실제로 사용하다보니 문제가 생겨 재포스팅한다.</p>\n<p>문제는 stream을 사용하기 때문인지, 요청을 처리하는 속도의 편차가 매우 심하다는 것이었다.</p>\n<p>0.5초만에 된다거나, 수 초만에 된다거나, 아니면 아예 안 되는 경우도 있었다.</p>\n<h4 id=\"해결-방법\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h4>\n<p>우선 <code class=\"language-text\">multer</code>를 미들웨어로 사용해서 로컬에 저장했는데,<br>\n<code class=\"language-text\">multer.diskStorage</code>를 사용하여 저장 위치와 파일 이름을 지정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> storage <span class=\"token operator\">=</span> multer<span class=\"token punctuation\">.</span><span class=\"token function\">diskStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">destination</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'csv/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">filename</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span>originalname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> upload <span class=\"token operator\">=</span> <span class=\"token function\">multer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> storage <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">multer</code>는 미들웨어로 작동하기 때문에 아래와 같이 내가 사용하는 controller 전에 실행하게 했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">router<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> upload<span class=\"token punctuation\">.</span><span class=\"token function\">single</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> uploadCsv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>controller에서는 저장된 csv파일을 읽는 작업을 했다.</p>\n<p>먼저는 readFile을 사용해서 csv파일을 읽으려했지만 데이터가 Buffer이었기 때문에 읽을 수가 없었다.<br>\nBuffer는 Chrome V8 엔진 밖에 위차한 고정된 크기의 메모리 덩어리이다.<br>\n마치 데이터의 바이트를 나타내는 정수가 담겨있는 배열이라고 생각하면 쉽다.<br>\nBuffer는 stream과 깊은 연관이 있는데, stream이 데이터를 더 빨리 소화할 수 있는 형태로 되어 있기 때문이다.</p>\n<p>이를 해결하기 위해서 readFile 메소드에 인코딩하는 방식인 ‘UTF-8’를 추가했더니 쉽표로 구분된 긴 문자열이 나왔다.</p>\n<p>쉼표와 <code class=\"language-text\">\\r\\n</code>을 사용해서 행과 열을 나누었지만 또 문제가 발생했다. 하나의 셀에 쉽표로 분리된 두 개의 값이 있는 경우, 정확한 셀 구분을 할 수 없다는 것이었다.</p>\n<p>복잡한 반복문과 조건문을 사용하여 해결할 수도 있었겠지만, 라이브러리의 도움을 받는 편이 낫다고 판단했다.</p>\n<p>사용한 라이브러리는 <code class=\"language-text\">csvtojson</code>이다. 한 줄로 csv 파일을 json 형태로 변환하는데 성공했다.</p>\n<p><a href=\"https://www.npmjs.com/package/csvtojson\" target=\"_blank\">csvtojson</a></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">csvtojson</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromFile</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>한 가지 배운 것이 있다면, 무작정 라이브러리에 의존하는 것은 쓸데없이 프로젝트를 무겁게 만든다는 단점이 있지만, 조금 복잡해진다 싶으면 좋은 라이브러리를 사용하는 것이 훨씬 효과적이라는 것이다.</p>","fields":{"slug":"/posts/til_191218/","tagSlugs":["/tag/uploading-csv/"]},"frontmatter":{"date":"2019.12.18","description":"How to upload csv file in node.js","tags":["uploading CSV"],"title":"TIL_191218","socialImage":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til_191218/"}}}