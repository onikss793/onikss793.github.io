{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/ip&subnet/","webpackCompilationHash":"885debce43c760381f88","result":{"data":{"markdownRemark":{"id":"ee8c549c-7452-579d-a10c-b6c82b1a67c2","html":"<h2 id=\"개요\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>AWS EC2를 사용해서 배포를 시도하다보니 애매하게 넘어가고 있는 개념들이 많은 것 같아 정리해보고자 한다.</p>\n<h3 id=\"ip-ip-주소란\"><a href=\"#ip-ip-%EC%A3%BC%EC%86%8C%EB%9E%80\" aria-label=\"ip ip 주소란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP, IP 주소란?</h3>\n<h4 id=\"ip\"><a href=\"#ip\" aria-label=\"ip permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP</h4>\n<p>Internet Protocol(인터넷 / 규약). 말그대로 인터넷을 사용한 네트워크 통신을 할 때 쓰는 일종의 약속, 규약을 말한다.<br>\n여기서의 네트워크 통신이란 간단한 인터넷 검색, 게임, 온라인 쇼핑 등을 할 때의 통신을 모두 일컫는다.</p>\n<h4 id=\"ip-주소\"><a href=\"#ip-%EC%A3%BC%EC%86%8C\" aria-label=\"ip 주소 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 주소</h4>\n<p>그렇다면 IP 주소란 이 약속, 규약에서 현재 네트워크 통신을 사용하고 있는 기기의 주소를 말한다.<br>\n예를 들어, 서로 편지를 주고 받을 때 서로의 주소를 반드시 알아야만 서로 소통할 수 있는 것과 비슷한 개념이다.<br>\n다시 말하면, IP 주소는 각각의 기기들, HOST들을 구분하여 컴퓨터끼리 주고 받는 데이터를 정확한 곳에 송, 수신하기 위해 필요한 것이다.</p>\n<h4 id=\"ipv4\"><a href=\"#ipv4\" aria-label=\"ipv4 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv4</h4>\n<p>IP 주소는 IPv4와 IPv6로 나뉘어진다. 전자는 3작리 숫자가 4마디로 표기되는 방식이고 이 각 마디를 옥텟이라 부른다. 총 표기되는 숫자는 12개이다.<br>\n예시: <code class=\"language-text\">123.123.123.123</code><br>\n예시의 주소는 내부적으로 32비트로 처리된다.<br>\n예를 들면, <code class=\"language-text\">1111011.1111011.1111011.1111011</code>로 표시된다.</p>\n<p><strong>IPv4의 문제</strong><br>\n인터넷이 거대해지면서 주소 고갈 문제로 번지게 된다. 2011년 2월 5일 기준, 공인 IP주소는 모두 고갈된 상태이다.</p>\n<h4 id=\"ipv6\"><a href=\"#ipv6\" aria-label=\"ipv6 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv6</h4>\n<p>IPv4의 고갈 문제를 해결하기 위해 나온 것이 IPv6이다. IPv6는 기존의 32비트 —> 128비트로 처리하면서 2의 128제곱인 총, <code class=\"language-text\">340,282,366,920,938,463,463,374,607,431,768,211,456</code>개의 IP를 할당할 수 있게 된다. 더불어 모바일 IP를 포함하기 때문에 모바일 기기에도 IP를 할당할 수 있다.<br>\n예시: <code class=\"language-text\">2001:0db8:0dad:0010:0000:0000:0000:0100</code></p>\n<h4 id=\"ipv4-클래스-분류\"><a href=\"#ipv4-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B6%84%EB%A5%98\" aria-label=\"ipv4 클래스 분류 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv4 클래스 분류</h4>\n<p>IP 주소는 대역에 따라 A, B, C, D, E 등의 클래스로 나누어질 수 있다. 이를 통해 클래스 내에 Network ID와 Host ID를 구분하게 된다.</p>\n<p><img src=\"https://images.velog.io/post-images/onikss793/0d2ef400-260e-11ea-b1c8-6f3b636e58f6/IPv4.jpeg\" alt=\"IPv4클래스분류.jpeg\"></p>\n<p>클래스 A: 대규모 네트워크 환경<br>\n클래스 B: 중규모 네트워크 환경<br>\n클래스 C: 소규모 네트워크 환경<br>\n클래스 D: 멀티캐스트 용<br>\n클래스 E: 연구/개발 용, 혹은 미래에 사용</p>\n<p>또한 각 클래스 안에서 IP는 Network ID와 Host ID로 구분할 수 있다.</p>\n<p><img src=\"https://images.velog.io/post-images/onikss793/7f56e420-260e-11ea-abff-893628e3cd4e/ClassNetworkHostID.jpeg\" alt=\"Class내Network,HostID구분.jpeg\"></p>\n<h4 id=\"ip-클래스의-문제\"><a href=\"#ip-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%AC%B8%EC%A0%9C\" aria-label=\"ip 클래스의 문제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IP 클래스의 문제</h4>\n<p>IPv4는 초기에 클래스로 나누어서 할당을 했다. 하지만 예를 들어, 클래스 B를 어느 중소기업체에 할당할 경우, 65,000여개의 IP를 다 쓰지 않고, 10,000개 정도만 사용한다고 가정하면 나머지 50,000여개의 IP는 쓰이지 않은 채 클래스 B의 하나를 점유하고 있는 상태가 된다.</p>\n<h3 id=\"subnet-subnet-mask\"><a href=\"#subnet-subnet-mask\" aria-label=\"subnet subnet mask permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subnet, Subnet Mask</h3>\n<p><strong>서브넷</strong>: IP 주소에서 네트워크 영역을 부분적으로 나눈 부분망, 부분 네트워크<br>\n<strong>서브넷 마스크</strong>: 서브넷을 만들 때, IP 주소 체계의 Network ID와 Host ID를 분리</p>\n<p><img src=\"https://images.velog.io/post-images/onikss793/76f1e270-260f-11ea-9249-91137bfbad6a/.jpeg\" alt=\"서브넷예시.jpeg\"></p>\n<p>서브넷 마스크의 형태는 기본적으로 IP주소와 같은 32bit 이진수이다. 서브넷 마스크의 목적은 IP주소와 AND 연산하여 Network 부분의 정보를 걸러내는 것이다.</p>\n<h4 id=\"서브넷팅\"><a href=\"#%EC%84%9C%EB%B8%8C%EB%84%B7%ED%8C%85\" aria-label=\"서브넷팅 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서브넷팅</h4>\n<p>기본 A 클래스의 IP를 그대로 할당하게 되면 할당 가능한 호스트 수가 16,777,216개나 된다. 하나의 A 클래스만 가지고 전체 IP를 관리하기에는 너무 비효율적이다.</p>\n<p>서브넷팅은 이런 문제점을 해결하기 위한 방법이다. 예를 들어, A 클래스의 IP를 두 개의 서브넷으로 나누고 싶다고 가정했을 때, 두개의 서브넷을 나누려면 서브넷 마스크에서 비트의 수를 하나로 set하면 된다.<br>\n<code class=\"language-text\">서브넷 마스크: 255.0.0.0 =&gt; 255.128.0.0</code><br>\n<code class=\"language-text\">A 클래스망: Network ID 116.0.0.0 =&gt; 116.128.0.0</code></p>","fields":{"slug":"/posts/ip&subnet/","tagSlugs":["/tag/ip/","/tag/subnet/"]},"frontmatter":{"date":"2019.12.24","description":"What is Ip and Subnet","tags":["IP","Subnet"],"title":"IP? Subnet?","socialImage":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/ip&subnet/"}}}