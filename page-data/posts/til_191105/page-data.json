{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/til_191105/","webpackCompilationHash":"4c88981f7706072c8878","result":{"data":{"markdownRemark":{"id":"4326120c-52c9-5811-8c87-52c5054f15bf","html":"<h2 id=\"유동-라우터\"><a href=\"#%EC%9C%A0%EB%8F%99-%EB%9D%BC%EC%9A%B0%ED%84%B0\" aria-label=\"유동 라우터 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>유동 라우터</strong></h2>\n<p>존재하지 않는 URL을 검색했을 때, 강제로 메인 페이지로 보내는 방법, 404 페이지를 띄우는 방법, 둘 중 하나를 반드시 선택해서 보여주어야 한다.<br>\n<strong>querystring</strong>: ? 뒤에 옵션으로 붙는 스트링 값들. split을 사용해서 각각의 옵션들을 얻을 수 있다. 그리고 그 값들을 이용해서 fetch 함수에 적용하면 된다.</p>\n<p>path로 설정하는 법: <code class=\"language-text\">/posts/react/router</code> 처럼 서브 경로를 설정해주는 방법이다. 한 개만 필요하면 path로 설정하는 것이 더 편하고, 만약 여러 개의 옵션이 필요한 경우 querystring을 사용하는 것이 더 편하다.</p>\n<p><strong>event bubbling</strong><br>\nex) onClick event : 빈 에로우 함수에 인자를 지정해서 호출</p>\n<p><strong>반응형 웹페이지</strong><br>\n모든 페이지에서 잘 나온다는 것은 어떠한 출력 장치의 어떠한 사이즈의 페이지에서도 잘 나오는 것을 말한다. 즉 일정한 퍼센트를 기준으로 변하는 것이 <strong>media query</strong>이다.\n네이버의 <code class=\"language-text\">m.naver.com</code> 같은 경우는 엔트리 포인트에서 출력 장치의 가로 크기(<code class=\"language-text\">window.innerWidth</code>)를 받아들이고 아예 경로를 바꿔버린 것이다. 다시 말해 <code class=\"language-text\">naver.com =&gt; m.naver.com</code> 으로 이동시키는 것이다.\ncss의 우선 순위를 고려해서 구문을 작성해야 한다. class나 id도 있지만 구문의 상하도 영향이 있다.</p>\n<p>sStyle 폴더 밑에 config.scss 라는 파일을 만들어서 변수를 따로 관리하는 것이 유지, 보수에 용이하다.</p>\n<p>Break Point: 화면의 구성 요소가 바뀌게 되는 순간을 말한다. 팀 단위로 정해서 기준점을 만들어야 한다.\n<code class=\"language-text\">responsivedesign.is</code></p>\n<p><strong>ref</strong>\nwindow에 click 혹은 mousedown 이벤트를 준다. ref => 해당 요소에 대한 레퍼런스를 저장한다.</p>","fields":{"slug":"/posts/til_191105/","tagSlugs":["/tag/project/","/tag/media-query/","/tag/qeury-string/"]},"frontmatter":{"date":"2019.11.05","description":"Things I've learned through project","tags":["Project","Media Query","Qeury String"],"title":"TIL_191105","socialImage":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/til_191105/"}}}